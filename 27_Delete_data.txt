➡️Delete Operation In Node.js:
    We will Delete our person Records, and for that we will create an endpoint from where we are able to delete the record
    -For Deletion, we need one thing:
      1️⃣ Which record we want to update?

    🟢 For deletion, we will use the DELETE method to create an endpoint
    🟢 What is a unique identifier in a document in a collection?
    🟢 It’s _id which Mongodb itself gives, We will use this to find the particular record that we want to delete
    🟢 Code:
        ➡️ See code inside PersonRoutes.js

        router.delete("/:id", async (req, res) => {
          try {
            const personId = req.params.id; //Extracting the id from the URL paramter
            // .findByIdAndDelete is predefined method in mongoDb, used to delete the record which matches the provided id
            //Note: As of version 8 there is no more .findByIdAndRemove() in its place you will have to use .findByIdAndDelete()
            const response = await Person.findByIdAndDelete(personId);
            if (!response) {
              return res.status(404).json({ error: "Person not found!" });
            }
            console.log("Data deleted");
            return res.status(200).json({ message: "Person deleted successfully" });
          } catch (error) {
            console.log("Error while deleting a person record", error);
            res.status(500).json({ error: "Internal server error" });
          }
        });