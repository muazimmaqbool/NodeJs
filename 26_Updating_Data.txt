‚û°Ô∏èUpdate Operation In Node.js:
    ->We will update our person Records, and for that, we will create an endpoint from where we are able to update the record
    ->For Updation, we need two things
        1Ô∏è‚É£ Which record we want to update?
        2Ô∏è‚É£ What exactly do we want to update?
    üü¢For update, we will use the PUT method to create an endpoint
        Note: We can also use PATCH method to update the data but for now we will use PUT method
    üü¢What is a unique identifier in a document in a collection?
    üü¢It‚Äôs _id which Mongodb itself gives, We will use this to find the particularrecord that we want to update
    üü¢Just like in POST method we give the data here for updating the data we also have to give the data which is basically new data i.e updated

    üü¢ Code:
        app.put("/person/:id", async (req, res) => {
            try {
                const personId = req.params.id; // Extract the person's ID from the URL parameter
                const updatedPersonData = req.body; // Updated data for the person
                // Assuming you have a Person model
                const updatedPerson = await Person.findByIdAndUpdate(
                personId,
                updatedPersonData,
                {
                    new: true, // Return the updated document
                    runValidators: true, // Run Mongoose validation
                }
                );
                if (!updatedPerson) {
                return res.status(404).json({ error: "Person not found" });
                }
                // Send the updated person data as a JSON response
                res.json(updatedPerson);
            } catch (error) {
                console.error("Error updating person:", error);
                res.status(500).json({ error: "Internal server error" });
            }
        });


    ‚û°Ô∏è Check Updating Person data code is in personRoutes.js file (which is inside Routes folder)



