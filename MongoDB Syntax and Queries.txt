->download: https://www.mongodb.com/try/download/community
->download mongodb shell: https://www.mongodb.com/try/download/shell
->Installation guide: https://www.geeksforgeeks.org/how-to-install-mongodb-on-windows/
                             or
                      https://youtu.be/tC49Nzm6SyM?si=QE07KNpCmxWHLrEc

(
 -> Database is where we keep the data
 -> MongoDB is an open source NoSQL database management program
)
->After installing and setup of MongoDB:
(Note: First learn basic things about SQL it will help a lot - optional )
  
  ->Let's focus on syntax and queries of MongoDB:
        -There are two things : 1)MongoDB server , 2) MongoDB shell

        -Commands for start server on Window
           - for start : (net start MongoDB)
           - for stop : (net stop MongoDB)
           - Enter in DataBase 
           - Enter : (monogsh),
           - show database : (show dbs)


       ->Show all databases: show dbs
      
       ->Create/use a database in mongodb : use myDb (here myDb is name of database, it can be anything )
            - use myTestDb                 // Switch to or create the database
            -  db.createCollection("users") // Create a collection named 'users'
            -  db.users.insertOne({ name: "Muazim", age: 25}) // Add data
            -  db.users.find()  // gives you data inside 'users' collection

        Now to add another user inside users collection:
          ->first go inside users then > db.users.insertOne({name:"Basit",role:"Support Engineer",age:25})
          Note: here after adding this data into users the mongodb will return this:
                                      {
                                        acknowledged: true, //means your data is inserted
                                        insertedId: ObjectId('6815f148cea76829b2b5f89a') //unique id generated by MongoDB
                                      }
          -> now hit db.users.find(); you will see data inside users collection

      ->Finding Data:
         Find All Users:
        1)db.users.find() // Shows all documents in the users collection.
         Find One User:
        2)db.users.findOne({ name: "Muazim" }) //Returns the first match where name is "Muazim".
        Find with a Condition:
        3)db.users.find({ age: { $gt: 22 } })  // Users older than 22 (gt = greater-than.)
        4)db.users.find({ age: { $lte: 24 } }) // Users age 24 or less (lte= less than equal)
        Find Specific Fields Only
        5)db.users.find({ name: "Muazim" }, { _id: 0, name: 1 }) //Returns only the name field (hides _id).

       ->Deleting data in users collection:
          -> Delete One User:
              (Delete the first user that matches a condition)
                 >db.users.deleteOne({ name: "Alice" })
          
          -> Delete Multiple Users:
              (Deletes all users where age is 25)
                 >db.users.deleteMany({ age: 25 })
          
          ->  Delete All Users:
                (Deletes every document in the users collection)
                  >db.users.deleteMany({})

        ->Updating Data: (it takes two parameters: 1)which to document to update, 2)which field to update )
            1)Update One Document:
                >db.users.updateOne(
                    { name: "Muazim" },         // Filter (which user to update)
                    { $set: { age: 26 } }       // Update (what to change)
                  )

            2)Update Many Documents:
                >db.users.updateMany(
                      { age: { $lt: 23 } },       // Filter (users younger than 23)
                      { $set: { status: "young" } } // Add or update `status` field
                    )

            3)Add a New Field in existing document:
              >db.users.updateOne(
                  { name: "Ali" },
                  { $set: { city: "Srinagar" } }
                )
                //Adds city: "Srinagar" to the user named "Ali".

            4)Add New Field to All Users:
                >db.users.updateMany({}, { $set: { active: true } })
      

      Important:
        ->using the above commands via command prompt might be bit hard specially when the data is big
          so to deal with that and to make it simple we a "MongoDB Compass GUI"
          link to download:  https://www.mongodb.com/try/download/compass

        ->if you don't want to use mongodb compass you can use "mongodb robo 3t" - download and use them
          but mostly "mongodb compass is used"

        ->what it does is that: the databases which are present into your system it shows them graphically and you can also
          interact with that data

        ->Important:
           >After downloading and installing mongodb compass > open it
           >After opening it click on Add New Connection:
              {
              ->This compass also needs an server to run, basically what compass will do is that if your database is up it will
                help you to interact with the data.
              }

